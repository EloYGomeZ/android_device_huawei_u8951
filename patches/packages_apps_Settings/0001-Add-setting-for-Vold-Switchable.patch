From e1f2d3e762c1728d25d2d4381a302fc991f12740 Mon Sep 17 00:00:00 2001
From: EloYGomeZ <eloygomez@eloygomez-desktop>
Date: Tue, 12 Nov 2013 00:36:33 +0100
Subject: [PATCH] Add setting for Vold Switchable

Change-Id: I75adcb74b0e2f8c421ace1faf54977972a598e8a
---
 AndroidManifest.xml                             |  1 +
 res/values/cm_strings.xml                       |  7 ++++
 res/xml/device_info_memory.xml                  |  5 +++
 src/com/android/settings/deviceinfo/Memory.java | 54 ++++++++++++++++++++++++-
 4 files changed, 66 insertions(+), 1 deletion(-)

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 5116349..33bb541 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -64,6 +64,7 @@
     <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
     <uses-permission android:name="android.permission.SET_TIME" />
     <uses-permission android:name="android.permission.CHANGE_PRIVACY_GUARD_STATE" />
+	<uses-permission android:name="android.permission.REBOOT" />
 
     <!-- MOKEE PUSH PERMISSION START -->
     <uses-permission android:name="android.permission.BROADCAST_STICKY" />
diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index c8ed84a..06d8938 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -956,5 +956,12 @@ two in order to insert additional control points. \'Remove\' deletes the selecte
     <string name="privacy_guard_help_text">In this screen you can choose for which apps Privacy Guard should be active by simply tapping on them. Selected apps will not be able to access your personal data, such as contacts, messages or call logs. Long pressing on an entry opens the app details screen for that app.\n\nBy default built-in apps are not shown. If you want to show them or filter apps to show only the ones requesting access to personal data by their permissions, select the respective options in the menu.</string>
     <string name="privacy_guard_manager_show_system_apps">Show built-in apps</string>
     <string name="privacy_guard_manager_filter_permissions">Permission filter</string>
+    
+    <!-- Vold Switchable Pair -->
+    <string name="storage_switch_title">Use external SD as primary</string>
+    <string name="storage_switch_summary_off">Using expanded internal storage for apps and media</string>
+    <string name="storage_switch_summary_on">Using SD Card for apps and media</string>
+    <string name="reboot_prompt_title">Reboot required</string>
+    <string name="reboot_prompt_message">In order to apply the changed configuration, a reboot is required.\n\nDo you want to reboot now?</string>
 
 </resources>
diff --git a/res/xml/device_info_memory.xml b/res/xml/device_info_memory.xml
index e905f39..89c6c3f 100644
--- a/res/xml/device_info_memory.xml
+++ b/res/xml/device_info_memory.xml
@@ -16,6 +16,11 @@
 
 <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
         android:title="@string/storage_settings_title">
+   <CheckBoxPreference
+ 	    android:key="key_switch_storage"
+        android:title="@string/storage_switch_title"
+        android:summaryOn="@string/storage_switch_summary_on"
+        android:summaryOff="@string/storage_switch_summary_off" />
 
 <!-- Preference categories are dynamically created based on the list of available storage volumes -->
 
diff --git a/src/com/android/settings/deviceinfo/Memory.java b/src/com/android/settings/deviceinfo/Memory.java
index 529c81c..06a3c74 100644
--- a/src/com/android/settings/deviceinfo/Memory.java
+++ b/src/com/android/settings/deviceinfo/Memory.java
@@ -31,15 +31,19 @@ import android.hardware.usb.UsbManager;
 import android.os.Bundle;
 import android.os.Environment;
 import android.os.IBinder;
+import android.os.PowerManager;
 import android.os.RemoteException;
 import android.os.ServiceManager;
+import android.os.SystemProperties;
 import android.os.storage.IMountService;
 import android.os.storage.StorageEventListener;
 import android.os.storage.StorageManager;
 import android.os.storage.StorageVolume;
+import android.preference.CheckBoxPreference;
 import android.preference.Preference;
 import android.preference.PreferenceActivity;
 import android.preference.PreferenceScreen;
+import android.text.TextUtils;
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -78,6 +82,10 @@ public class Memory extends SettingsPreferenceFragment {
     private UsbManager mUsbManager;
 
     private ArrayList<StorageVolumePreferenceCategory> mCategories = Lists.newArrayList();
+    private static final String KEY_SWITCH_STORAGE = "key_switch_storage";
+    private static final String VOLD_SWITCH_PERSIST_PROP = "persist.sys.vold.switchexternal";
+    private static final String VOLD_SWITCHABLEPAIR_PROP = "persist.sys.vold.switchablepair";
+    private CheckBoxPreference mSwitchStoragePref;
 
     @Override
     public void onCreate(Bundle icicle) {
@@ -91,6 +99,27 @@ public class Memory extends SettingsPreferenceFragment {
         mStorageManager.registerListener(mStorageListener);
 
         addPreferencesFromResource(R.xml.device_info_memory);
+	
+        String voldswitch = SystemProperties.get(VOLD_SWITCH_PERSIST_PROP, "0");
+ 		mSwitchStoragePref = (CheckBoxPreference) findPreference(KEY_SWITCH_STORAGE);
+ 		mSwitchStoragePref.setChecked("1".equals(voldswitch));
+ 		if (!Environment.isExternalStorageEmulated()) {
+ 			Log.i(TAG, "Checking to see if vold switch is possible on this device.");
+ 			String PRIMARY_STORAGE = System.getenv("EXTERNAL_STORAGE");
+ 			String SECONDARY_STORAGE = System.getenv("SECONDARY_STORAGE");
+ 			if (!TextUtils.isEmpty(PRIMARY_STORAGE) && !TextUtils.isEmpty(SECONDARY_STORAGE)) {
+ 				SystemProperties.set(VOLD_SWITCHABLEPAIR_PROP, PRIMARY_STORAGE + ',' +
+						SECONDARY_STORAGE);
+				Log.i(TAG, "Setting persist.sys.vold.swichablepair=" + PRIMARY_STORAGE + ',' +
+                        SECONDARY_STORAGE);
+       		} else {
+ 				Log.i(TAG, "Vold switch not possible on this device.");
+			}
+   		}
+
+ 	    if (SystemProperties.get(VOLD_SWITCHABLEPAIR_PROP).equals("")) {
+ 			removePreference(KEY_SWITCH_STORAGE);
+		}
 
         addCategory(StorageVolumePreferenceCategory.buildForInternal(context));
 
@@ -209,7 +238,13 @@ public class Memory extends SettingsPreferenceFragment {
 
     @Override
     public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {
-        if (StorageVolumePreferenceCategory.KEY_CACHE.equals(preference.getKey())) {
+        if(preference == mSwitchStoragePref) {
+			Log.d(TAG,"Setting persist.sys.vold.switchexternal to "+(
+				   mSwitchStoragePref.isChecked() ? "1" : "0"));
+		    SystemProperties.set(VOLD_SWITCH_PERSIST_PROP,
+					mSwitchStoragePref.isChecked() ? "1" : "0");
+		    showRebootPrompt();
+		} else if (StorageVolumePreferenceCategory.KEY_CACHE.equals(preference.getKey())) {
             ConfirmClearCacheFragment.show(this);
             return true;
         }
@@ -415,4 +450,21 @@ public class Memory extends SettingsPreferenceFragment {
             return builder.create();
         }
     }
+ 
+   private void showRebootPrompt() {
+       AlertDialog dialog = new AlertDialog.Builder(getActivity())
+               .setTitle(R.string.reboot_prompt_title)
+               .setMessage(R.string.reboot_prompt_message)
+               .setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {
+                   @Override
+                   public void onClick(DialogInterface dialog, int which) {
+                       PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);
+                       pm.reboot(null);
+                   }
+               })
+              .setNegativeButton(R.string.no, null)
+              .create();
+
+       dialog.show();
+    }
 }
-- 
1.8.1.2

