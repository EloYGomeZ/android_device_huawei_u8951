From 03d2ef5e413b1c301657dc6d23f724734146d1a5 Mon Sep 17 00:00:00 2001
From: Konsta <konsta09@gmail.com>
Date: Thu, 28 Mar 2013 11:03:46 +0200
Subject: [PATCH 2/2] fix for DECIDE_TEXTURE_TARGET

DECIDE_TEXTURE_TARGET hack wasn't correctly handling the
BufferRejecter that was added in JB. On rare occasions this
resulted in graphical corruption when wrong texture target
was called from BufferRejecter. Move DECIDE_TEXTURE_TARGET
switch before the rejecter to take care of this.

Change-Id: I82d604ff2f89f77d2736c2a5c0ba01e2eab2b308
---
 libs/gui/SurfaceTexture.cpp | 45 +++++++++++++++++++++++----------------------
 1 file changed, 23 insertions(+), 22 deletions(-)

diff --git a/libs/gui/SurfaceTexture.cpp b/libs/gui/SurfaceTexture.cpp
index bbcc8e7..4be2085 100644
--- a/libs/gui/SurfaceTexture.cpp
+++ b/libs/gui/SurfaceTexture.cpp
@@ -243,6 +243,29 @@ status_t SurfaceTexture::updateTexImage(BufferRejecter* rejecter, bool skipSync)
     if (err == NO_ERROR) {
         int buf = item.mBuf;
 
+#ifdef DECIDE_TEXTURE_TARGET
+        // GPU is not efficient in handling GL_TEXTURE_EXTERNAL_OES
+        // texture target. Depending on the image format, decide,
+        // the texture target to be used
+
+        if(isComposition){
+            switch (mSlots[buf].mGraphicBuffer->format) {
+                case HAL_PIXEL_FORMAT_RGBA_8888:
+                case HAL_PIXEL_FORMAT_RGBX_8888:
+                case HAL_PIXEL_FORMAT_RGB_888:
+                case HAL_PIXEL_FORMAT_RGB_565:
+                case HAL_PIXEL_FORMAT_BGRA_8888:
+                case HAL_PIXEL_FORMAT_RGBA_5551:
+                case HAL_PIXEL_FORMAT_RGBA_4444:
+                    mTexTarget = GL_TEXTURE_2D;
+                    break;
+                default:
+                    mTexTarget = GL_TEXTURE_EXTERNAL_OES;
+                    break;
+            }
+        }
+#endif
+
         // we call the rejecter here, in case the caller has a reason to
         // not accept this buffer. this is used by SurfaceFlinger to
         // reject buffers which have the wrong size
@@ -259,28 +282,6 @@ status_t SurfaceTexture::updateTexImage(BufferRejecter* rejecter, bool skipSync)
 
         EGLImageKHR image = mEglSlots[buf].mEglImage;
 
-#ifdef DECIDE_TEXTURE_TARGET
-                // GPU is not efficient in handling GL_TEXTURE_EXTERNAL_OES
-                // texture target. Depending on the image format, decide,
-                // the texture target to be used
-
-                if(isComposition){
-                    switch (mSlots[buf].mGraphicBuffer->format) {
-                        case HAL_PIXEL_FORMAT_RGBA_8888:
-                        case HAL_PIXEL_FORMAT_RGBX_8888:
-                        case HAL_PIXEL_FORMAT_RGB_888:
-                        case HAL_PIXEL_FORMAT_RGB_565:
-                        case HAL_PIXEL_FORMAT_BGRA_8888:
-                        case HAL_PIXEL_FORMAT_RGBA_5551:
-                        case HAL_PIXEL_FORMAT_RGBA_4444:
-                            mTexTarget = GL_TEXTURE_2D;
-                            break;
-                        default:
-                            mTexTarget = GL_TEXTURE_EXTERNAL_OES;
-                            break;
-                    }
-                }
-#endif
         glBindTexture(mTexTarget, mTexName);
         glEGLImageTargetTexture2DOES(mTexTarget, (GLeglImageOES)image);
 
-- 
1.8.1.2

